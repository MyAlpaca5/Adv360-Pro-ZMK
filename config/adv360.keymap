
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
     &mo 1  &kp N1  &kp N2    &kp N3     &kp N4  &kp N5              &kp C_VOLUME_UP                                                           &bl BL_TOG  &kp N6    &kp N7     &kp N8   &kp N9    &kp N0  &sk RC(RSHIFT)
   &kp TAB   &kp Q   &kp W     &kp E      &kp R   &kp T                   &kp C_MUTE                                                        &kp RG(SPACE)   &kp Y     &kp U      &kp I    &kp O     &kp P           &none
   &kp ESC   &kp A   &kp S     &kp D      &kp F   &kp G            &kp C_VOLUME_DOWN   &none      &none                      &none   &none  &kp RA(SPACE)   &kp H     &kp J      &kp K    &kp L  &kp SEMI         &kp SQT
 &kp LSHFT   &kp Z   &kp X     &kp C      &kp V   &kp B                                           &none                      &none                          &kp N     &kp M  &kp COMMA  &kp DOT  &kp FSLH       &kp RSHFT
     &none   &none   &none  &kp LEFT  &kp RIGHT                            &kp SPACE   &mo 2  &kp LCTRL                  &kp RCTRL   &mo 2      &kp SPACE          &kp DOWN     &kp UP    &none     &none           &none
            >;
        };

        layer_Magic {
            bindings = <
       &none   &none   &none   &none       &none   &none                   &none                                                                 &none   &none   &none   &none   &none   &none        &none
       &none   &none   &none   &none       &none   &none                   &none                                                                 &none   &none   &none   &none   &none   &none        &none
       &none   &none   &none   &none       &none   &none                   &none  &bt BT_SEL 2   &none                   &none       &none       &none   &none   &none   &none   &none   &none        &none
       &none   &none   &none   &none       &none   &none                                         &none                   &none                           &none   &none   &none   &none   &none        &none
 &bootloader  &reset   &none   &none  &bt BT_CLR                    &bt BT_SEL 0  &bt BT_SEL 1   &none                   &none  &bl BL_DEC  &bl BL_INC           &none   &none   &none  &reset  &bootloader
            >;
        };

        layer_Symbol {
            bindings = <
  &none  &kp LS(N1)  &kp LS(N2)    &kp LS(N3)    &kp LS(N4)  &kp LS(N5)            &none                                                   &none  &kp RS(N6)     &kp RS(N7)     &kp RS(N8)    &kp RS(N9)  &kp RS(N0)   &none
  &none       &none       &none      &kp LBKT      &kp RBKT       &none            &none                                                   &none       &none  &kp RS(MINUS)  &kp RS(EQUAL)  &kp RS(BSLH)       &none   &none
  &none       &none       &none    &kp LS(N9)    &kp LS(N0)       &none            &none   &none   &none                   &none   &none   &none       &none      &kp MINUS      &kp EQUAL      &kp BSLH       &none   &none
  &none       &none       &none  &kp LS(LBKT)  &kp LS(RBKT)       &none                            &none                   &none                       &none      &kp GRAVE  &kp RS(GRAVE)         &none       &none   &none
  &none       &none       &none         &none         &none                        &none   &none   &none                   &none   &none   &none                      &none          &none         &none       &none   &none
            >;
        };

        layer_Func {
            bindings = <
        &none  &kp F1       &kp F2  &kp F3             &kp F4  &kp F5            &none                                                   &none    &kp F6        &kp F7         &kp F8     &kp F9  &kp F10    &none
        &none   &none  &kp LC(DEL)   &none  &kp LC(BACKSPACE)   &none            &none                                                   &none  &kp HOME  &kp RC(LEFT)  &kp RC(RIGHT)    &kp END    &none  &kp F11
 &kp CAPSLOCK   &none      &kp DEL   &none      &kp BACKSPACE   &none            &none   &none   &none                   &none   &none   &none  &kp LEFT      &kp DOWN         &kp UP  &kp RIGHT    &none  &kp F12
        &none   &none        &none   &none              &none   &none                            &none                   &none                     &none         &none          &none      &none    &none    &none
        &none   &none        &none   &none              &none                    &none   &none   &none                   &none   &none   &none                   &none          &none      &none    &none    &none
            >;
        };

        layer_Layer__4 {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

    };
};
